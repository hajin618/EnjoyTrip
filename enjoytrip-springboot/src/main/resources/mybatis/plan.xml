<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.ssafy.enjoytrip.plan.model.mapper.PlanMapper">

	<resultMap type="planDto" id="plan">
		<result column="plan_idx" property="plan_idx" />
		<result column="user_idx" property="user_idx" />
		<result column="plan_title" property="plan_title" />
		<result column="plan_create" property="plan_create" />
		<result column="plan_update" property="plan_update" />
		<result column="plan_start" property="plan_start" />
		<result column="plan_end" property="plan_end" />
		<result column="plan_like" property="plan_like" />
		<result column="plan_hit" property="plan_hit" />
		<result column="user_name" property="userDto.user_name" />
	</resultMap>
	
	<select id="listPlan" resultMap="plan">
		select *, user.user_name
		from
		plan left join user on
		plan.user_idx = user.user_idx;
	</select>

	<select id="getPlan" parameterType="int" resultType="planDto">
		select
		plan_idx, user_idx, plan_title, plan_create, plan_update, plan_start,
		plan_end, plan_like, plan_hit
		from plan
		where plan_idx = #{plan_idx}
	</select>
	<insert id="createPlan" parameterType="planDto">
		insert into plan
		(user_idx, plan_title, plan_start, plan_end)
		values (#{user_idx},
		#{plan_title}, #{plan_start}, #{plan_end})
		<selectKey resultType="int" keyProperty="plan_idx" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<delete id="deletePlan" parameterType="int">
		delete from plan
		where
		plan_idx = #{plan_idx}
	</delete>

	<insert id = "addPlanPermission" parameterType="map">
		insert into plan_permission
		(plan_idx, user_idx)
		values(#{planIdx}, #{userIdx})
	</insert>
	
	<delete id = "deletePlanPermission" parameterType="map">
		delete from plan_permission
		where
		plan_idx = #{planIdx} and user_idx = #{userIdx}
	</delete>
	<update id="updatePlan" parameterType="planDto">
		update plan
		<trim prefix="set" suffixOverrides=",">
			<if test="plan_title != null">plan_title = #{plan_title},</if>
			<if test="plan_content != null">plan_content= #{plan_content},</if>
		</trim>
		where plan_idx = #{plan_idx}
	</update>
	<update id="updateHit" parameterType="int">
		update plan
		set plan_hit =
		plan_hit + 1
		where plan_idx = #{plan_idx}
	</update>

	<select id="getPlanDetail" parameterType="int"
		resultType="planDetailDto">
		select *
		from plan_detail
		where plan_idx = #{plan_idx}
	</select>

	<select id="getPlanComment" parameterType="int"
		resultType="planCommentDto">
		select a.plan_idx, b.plan_comment_idx, b.user_idx, b.plan_comment_create,
		b.plan_comment_update,
		b.plan_comment_content
		from plan a left join
		plan_comment b on a.plan_idx = b.plan_idx
		where a.plan_idx = #{plan_idx}
	</select>
	
	<delete id="deletePlanDetail" parameterType="int">
		delete from plan_detail where plan_idx = #{plan_idx}
	</delete>
	
	<insert id = "createPlanDetail" parameterType="planDto">
		insert into plan_detail (plan_idx, content_id)
		values 
		<foreach collection="planDetail" item="details" separator=" , ">
		(#{plan_idx}, #{details.content_id})
		</foreach>
	</insert>
	
	<insert id="createPlanComment" parameterType="planCommentDto">
		insert into plan_comment (user_idx, plan_idx, plan_comment_content)
		values
		(#{user_idx}, #{plan_idx}, #{plan_comment_content})
	</insert>
	
	<update id="updatePlanComment" parameterType="planCommentDto">
		update plan_comment 
		set plan_comment_update = now(), plan_comment_content = #{plan_comment_content} 
		where plan_comment_idx = #{plan_comment_idx};
	</update>
	
	<delete id="deletePlanComment" parameterType="int">
		delete from plan_comment
		where plan_comment_idx = #{plan_comment_idx}
	</delete>
	
	<insert id="addLikePlan" parameterType="map">
		insert into plan_like (plan_idx, user_idx)
		values (#{planIdx}, #{userIdx})
	</insert>
	
	<delete id="deleteLikePlan" parameterType="map">
		delete from plan_like 
		where plan_idx = #{planIdx} and user_idx = #{userIdx}
	</delete>
</mapper>